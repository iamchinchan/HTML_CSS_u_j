course notes, codes and FAQ's: https://github.com/jonasschmedtmann/html-css-course
vs code editor set up for this course:  https://github.com/jonasschmedtmann/html-css-course/blob/master/vscode-setup.md
resources page: https://codingheroes.io/resources/

dynamic websites: files sent from server to browser are first generated by application running on server

index.html: index is default name for the 1st page of any website so(entry point to any website),
every websiite must have 1 index.html to start with

semantics: having meaning

css describes the visual style and presentation of the content written in HTML.

a css rule: selector + declaration block
declaration block = many declarations
declaration/style: property and value ended with ;

seperation of concerns: keeping html and css different not entangled (so no use of inline css), and by use of internal /external css
index.html name cant be changed for 1st page, but we can name anything for a css file, as long as we are connecting it to the html file's head presentation

list selectors(h1,p,...), descendant selector (footer p: p inside of the footer)

rgba: alpha or transparency

hsl?

border: border-width, border-style, border-colors

pseudo classes: li:first-child  -> this will select all the li which are first child of their parents
li:nth-child(2)/(odd)
{
declaration;
}

text-decoration property is also short hand property: multi value :-> name, style, color

active pseudo class: duration of click

default style is represented as "user agent stylesheet" in chrome developer tools

declarations marked !important >inline style>id>class or pseudo class > element >* (univesal selector) > innherited styles(text styles are inherited mainly): closest inherited one are apllied

border-top is not inherited

universal selector * and body{} are diff as declaratoions in body will be inherited to all his
childrens and will be overwritten if same style is given a another value by any other
method as inherited styles has lowest priority.

and on the other hand *(universal selector) will be applied to all the elements
without any inheritence and is still will have more priority then inherited
styles for same properties applying on the element, but will have less priority then any other selection method

so if any non text property is styled both in body(element selector) and universal selector for ex: border-top property, then body 1 will be applied not the universal 1,
but in the casr of properties like color, if it has been styled in *, body, element level for ex: then 
element level will be applied thrn for those elements whoch do not have element level css style for property color
then all tes texts in some elements inside body will be colored acc to *(universal)
but if text is directly placed inside body without any futher body's child element then it will colored
acc to body declaration for color property

inline boxes and block level boxes/elements

block level elements: header, main, body,, h1-h6, ul, ol, li, p, div, aside, nav, section, footer
inline level elements: img, a, em, strong, b, button

on inline elements: height and width does not apply, and padding, margins only applied only horizontally(left and right):
in padding it expands element area by giving it the desired padding but does not inc parents dimensions,\
so kind of overflow if bg is applied, so left and right padding does get applied but not as usual.


margin collapse during vertical margins, not sure of horizontal margins(in horizontal i dont think they collapse)
margin collapse work on vertical level only ofc on block, there is no along side horizontal
element to check collapse with ofc
and margin collapse does not work on inline and inline-block in horizontal level and vertical level

inline-block: mix of both -> box model appies acc to block type,and visually looks like inline,
no line breaks and only occupies space acc to its content.

we can chain pseudo classes

positioning modes: 
normal flow-> relative position, according to html code
absolute positioning-> 

pseudo element selector-> ::, firstline, first letter, before, after : there are like inline elements-> better to make int inline block
adjacent element selector-> adjacent sibling selector : very next element code: +

after pseudo element:  last child in resp to which we define it
and before : first child instead

floats:

floated elements can be given margin around them
collapsing elements: due to float property. -> clear fix hack for clearing floats

looks like: with floats, margin does not get collapsed (not 100per sure,but looke the case when i tried.
)

clearing floats only works on block level elements, so for pseudo elemts created by :: after,
we should make them inline block or block box type:p refer block type.

layout: visual structure->  arranging content on page
page layout, component layout






